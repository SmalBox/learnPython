Python Note

1.I/O
	print('string1','string2',…) //输出字符串，每个字符串之间会加一个空格输出	
	print('I\'m ok.') //用反斜杠作为转义符号
	print(r'\\\n\\') //用r'content'来标识不转义
	print('''line1
	... line2
	... line3''')
	//用'''...'''表示多行内容,...不是代码，在.py文件中不用写,多行字符串也可用前面加r来不转义

	var = input('prompt text')
	//输入字符串，用var变量存起来，输入前有提示字符串'prompt text'输出
	//input()输入的是字符串，如需数字比较需要用int()来转换字符为数字类型

2.注释与格式
	# notes content: //注释以#开始，以：结束
	Python使用缩进组织代码块，坚持用4个空格缩进
	Python中用：来结束一个保留字语句

3.变量与基本运算
	一种除法是‘/’计算结果是浮点数，即使整除也是浮点数
	一种除法是‘//’两个整数除法仍然是整数

4.字符串
	ord() //获取字符的整数表示 例：>>>ord('A') 65
	chr() //编码转化为对应字符 例：>>>chr(66) 'B'

	>>>'\u4e2d\u6587' '中文' 用16进制写

	>>>'ABC'.encode('ascii') b'ABC' 用ascii编码英文为bytes
	>>>'中文'.encode('utf-8') b'\xe4\xb8\xad\xe6\x96\x87' 用utf-8编码中文bytes

	>>>b'\xe4\xb8\xad\xe6\x96\x87'.decode('utf-8') '中文' 解析字节
	>>>b'\xe4\xb8\xad\xff'.decode('utf-8',errors='ignore') '中'
	传入errors='ignore'忽略解析时部分无效字节

	>>>len('ABC') 3 >>>len('中文') 2 //计算包含了多少个字符

	>>>'hello, %s' % 'world' 'hello, world'
	>>>'hi, %s, you have $%d.' % ('Li',1000) 'hi, Li, you have $1000'
	//格式化占位符	占位符:	%d (整数) %f (浮点数) %s (字符串) %x (十六进制整数)
	>>>print('%03d,%.2f' % (3,3.1415926)) 003 3.14
	//占三个字符，用0补全。取小数点后两位。其中%要用%%转译
	
	>>>'hello, {0},成绩提升了 {1:.1f}%'.format('小明',17.125) 
	'hello, 小明, 成绩提升了 17.1%'
	//用format()格式化字符串。其中的%不用转译

	>>>a = 'abc'
	>>>b = a.replace('a', 'A')
	//变量a中还是'abc',而.replace()方法是对字符串'abc'操作，创建一个新的字符串返回给b

5.列表list
	>>>classmates = ['person1', 'person2', 'person3'] //创建一个classmates列表
	>>>classmates //输入列表名可输入列表内容： ['person1', 'person2', 'person3']
	>>>len(classmates) //用len()获取列表元素个数
	>>>classmates[0] //通过索引可访问元素内容：'person1'
	>>>classmates[-1] //可通过传递-1参数访问最后一个元素，也可从后方向前访问
	>>>classmates.append('person4') //可通过.append()向列表添加元素
	>>>classmates.insert(1,'person1.5') //可通过.insert()想列表插入元素
	>>>classmates.pop() //可通过.pop()删除列表尾部元素
	>>>classmates.pop(1) //可通过.pop() 传参删除指定元素
	>>>classmates[1] = 'people' //可通过索引直接给对应元素赋值
	//列表中元素可以是不同类型.也可以是list类型,组成多维列表

	>>>a = ['c', 'b', 'a']
	>>>a.sort()
	//.sort()对list内容进行排序,改变了list中的元素顺序

6.元组Tuple
	>>>t = (1,2) //创建一个t元组
	>>>t = (1,) //创建一个只有一个元素的元组，用逗号来区别数字1
	//元组元素不可变，但是可以放入列表元素，让列表来变达到安全灵活的目的

7.判断
	>>>if x:
	>>>    print('trueX')
	>>>elif y:
	>>>    print('trueY')
	>>>else:
	>>>    print('false')
	//条件后面要加冒号，当一个if满足条件后，后面的else或elif都不执行

8.循环
	>>>sum = 0
	>>>for x in range(101): //range（101）可以创建出一个从0到100的一个列表
	>>>    sum = sum + x 
	>>>print(sum)
	//for in : 循环，将in后的列表或元组依次取出赋给for后的变量
	>>>while n > 0:
	//while : 循环 ，只要满足条件就不断循环
	//python 支持break和continue操作

9.字典dict无序无重复元素集合set
	>>>d = ['name1':95,'name2':75,'name3':85] //键值存储
	>>>d['name1'] = 90 //通过键值访问修改
	>>>'name4' in d //通过in判断key是否存在
	>>>d.get('name4') //当key不存在时，返回None
	>>>d.get('name4',-1) //当key不存在时，返回指定的-1
	>>>d.pop('name1') //,pop()方法删除指定的键值

	>>>s1 = set([1,2,3])
	>>>s2 = set([2,3,4])
	>>>s1 & s2 //交集
	>>>s1 | s2 //并集
	>>>s1.add(5) //添加key值5,不可添加list
	>>>s1.remove(5) //删除key值5
